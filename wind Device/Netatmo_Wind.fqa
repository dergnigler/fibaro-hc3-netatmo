{"name":"Netatmo Wind","type":"com.fibaro.windSensor","apiVersion":"1.0","initialProperties":{"viewLayout":{"$jason":{"body":{"header":{"style":{"height":"250"},"title":"quickApp_device_29"},"sections":{"items":[{"components":[{"name":"Label1","style":{"weight":"1.2"},"text":"Label","type":"label"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"lblWind","style":{"weight":"1.2"},"text":"Label","type":"label"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"lblStation","style":{"weight":"1.2"},"text":"Label","type":"label"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"lblModule","style":{"weight":"1.2"},"text":"Label","type":"label"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"lblSeen","style":{"weight":"1.2"},"text":"Label","type":"label"},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"}]}},"head":{"title":"quickApp_device_29"}}},"uiCallbacks":[{"callback":"","eventType":null,"name":"Label1"},{"callback":"","eventType":null,"name":"lblWind"},{"callback":"","eventType":null,"name":"lblStation"},{"callback":"","eventType":null,"name":"lblModule"},{"callback":"","eventType":null,"name":"lblSeen"}],"mainFunction":"-- Wind sensor type have no actions to handle\n-- To update wind value, update property \"value\" with floating point number\n-- Eg. self:updateProperty(\"value\", 81.42) \n\n-- To update controls you can use method self:updateView(<component ID>, <component property>, <desired value>). Eg:  \n-- self:updateView(\"slider\", \"value\", \"55\") \n-- self:updateView(\"button1\", \"text\", \"MUTE\") \n-- self:updateView(\"label\", \"text\", \"TURNED ON\") \n\n-- This is QuickApp inital method. It is called right after your QuickApp starts (after each save or on gateway startup). \n-- Here you can set some default values, setup http connection or get QuickApp variables.\n-- To learn more, please visit: https://manuals.fibaro.com/\nlocal batt_level = 16\nlocal refresh_rate = 60 * 1\nlocal sy={}\n\nfunction post(e,t) \n    if trace then\n        debug(\"event: \", json.encode(e))\n        debug(\"timeout: \", t or 0)\n    end\n    setTimeout(function() main(e) end,t or 0) \nend\n\nfunction main(e)\n    ({\n        start = function(e)\n            appSelf:debug(\"starting device\")\n            local m = f.getGlobalVariable(\"netatmoModules\")\n            if m == \"\" then\n                appSelf:debug(\"no data available... try after 10 min\")\n                post({type=\"start\"}, 60 * 10 * 1000)\n                return\n            end\n            post({type = \"measure\", data = m})\n        end,\n        measure = function(e)\n            if e.data == nil then\n                appSelf:debug(\"updating data from global state\")\n                e.data = f.getGlobalVariable(\"netatmoModules\")\n            end\n            local module = json.decode(e.data)\n            appSelf:updateModule(module)\n            post({type = \"measure\"}, refresh_rate * 1000)\n        end\n    })[e.type](e)\nend\n\nfunction QuickApp:initIcons()\n    self.ic = {}\n    self.ic.error_icon=1001\n    self.ic.batt_icon=1002\n    self.ic.tornado_icon=1003\n    self.ic.wind_icon=1004\n    self.ic.gale_icon=1005\n    self.ic.main_icon=1006\nend\n\nfunction QuickApp:updateModule(m)\n    self.module = m\n    self:debug(\"updating module state....\")\n    self.wind = self.module.WIND_MODULE\n    self.base = self.module.BASE_MODULE\n    self:updateProperty(\"value\", self.wind.speed)\n    self:updateProperty(\"unit\", self.base.wind_unit)\n    self:refreshView()\n    self:debug(\"updating module state.... DONE\")\nend\n\nfunction QuickApp:displayNil()\n  self:updateView(\"Label1\",\"text\",string.format(\"%s - %s - %s - %s -\",sy.wind,sy.dir,sy.gust,sy.dir))\n  self:updateView(\"lblWind\", \"text\",string.format(\"%s %s - %s\\194\\176/- %s %s - %s\\194\\176/-\",sy.wind,sy.arrowup,sy.dir,sy.gust,sy.arrowup,sy.dir))\n  self:updateView(\"lblStation\",\"text\",string.format(\"%s %s %s -\",sy.round_pushpin,sy.warning,sy.trackball))\n  self:updateView(\"lblModule\",\"text\",string.format(\"%s - %s - %s - %%\",sy.cd,sy.battery,sy.signal))\n  if self.wind.last_seen ~= nil then\n    self:updateView(\"lblSeen\",\"text\",string.format(\"%s %s %s\",sy.eye,sy.warning,os.date(\"%d %m %Y %H:%M\",self.wind.last_seen)))\n  else self:updateView(\"lblSeen\",\"text\",string.format(\"%s %s -\",sy.eye,sy.warning))end\n  self:updateProperty(\"deviceIcon\",self.ic.error_icon)\nend\n\nfunction QuickApp:refreshView()\n    local wind_deg, gust_deg = \"\"\n    local cTime = os.time();\n    if ((cTime - self.wind.last_seen) < 1800) then\n        self:debug(\"new data available\")\n        if self.wind.deg < 0 then\n            wind_deg = \" -\"\n        else\n            wind_deg = self.wind.deg\n        end\n        if self.wind.gust_deg < 0 then\n            gust_deg = \" -\"\n        else\n            gust_deg = self.wind.gust_deg\n        end\n        local label = string.format(\"%s %s %s %s%s %s %s %s %s%s\",\n                        sy.wind,\n                        self.wind.speed,\n                        self.base.wind_unit,\n                        sy.dir,\n                        self.wind.dir,\n                        sy.gust,\n                        self.wind.gust,\n                        self.base.wind_unit,\n                        sy.dir,\n                        self.wind.gust_dir\n                        )\n        self:updateView(\"Label1\", \"text\", label)\n        self:updateView(\"lblWind\", \"text\", string.format(\"%s %s %s%s %s%s\\194\\176/%s %s %s %s%s %s%s\\194\\176/%s\",\n                            sy.wind,\n                            sy.arrowup,\n                            self.wind.speed_max,\n                            self.base.wind_unit,\n                            sy.dir,\n                            wind_deg,\n                            self.wind.dir,\n                            sy.gust,\n                            sy.arrowup,\n                            self.wind.gust_max,\n                            self.base.wind_unit,\n                            sy.dir,\n                            gust_deg,\n                            self.wind.gust_dir\n                        )\n        )\n        self:updateView(\"lblStation\", \"text\", string.format(\"%s %s %s %s\",\n                        sy.round_pushpin,\n                        self.base.name,\n                        sy.trackball,\n                        self.wind.name\n                    )\n        )\n        self:updateView(\"lblModule\", \"text\", string.format(\"%s %s %s %s%% %s %s%%\",\n                        sy.cd,\n                        self.wind.firmware,\n                        sy.battery,\n                        self.wind.batt,\n                        sy.signal,\n                        self.wind._rf\n                    )\n        )\n        self:updateView(\"lblSeen\", \"text\",string.format(\"%s %s\", \n                        sy.eye, \n                        os.date(\"%d %m %Y %H:%M\", self.wind.last_seen)\n                    )\n        )\n        if self.wind.batt > batt_level then\n            if self.base.wind_unit == \" mph\" then\n                if self.wind.gust < 7 then\n                    self:updateProperty(\"deviceIcon\", self.ic.main_icon)\n                elseif self.wind.gust >= 7 and self.wind.gust < 31 then\n                    self:updateProperty(\"deviceIcon\", self.ic.wind_icon)\n                elseif self.wind.gust >= 31 and self.wind.gust < 54 then\n                    self:updateProperty(\"deviceIcon\", self.ic.gale_icon)\n                elseif self.wind.gust >= 54 then\n                    self:updateProperty(\"deviceIcon\", self.ic.tornado_icon)\n                end\n            elseif self.base.wind_unit == \" m/s\" then\n                if self.wind.gust < 3.3 then\n                    self:updateProperty(\"deviceIcon\", self.ic.main_icon)\n                elseif self.wind.gust >= 3.3 and self.wind.gust < 13.8 then\n                    self:updateProperty(\"deviceIcon\", self.ic.wind_icon)\n                elseif self.wind.gust >= 13.8 and self.wind.gust < 24.4 then\n                    self:updateProperty(\"deviceIcon\", self.ic.gale_icon)\n                elseif self.wind.gust >= 24.4 then\n                    self:updateProperty(\"deviceIcon\", self.ic.tornado_icon)\n                end\n            elseif self.base.wind_unit == \" B\" then\n                if self.wind.gust < 2 then\n                    self:updateProperty(\"deviceIcon\", self.ic.main_icon)\n                elseif self.wind.gust >= 2 and self.wind.gust < 6 then\n                    self:updateProperty(\"deviceIcon\", self.ic.wind_icon)\n                elseif self.wind.gust >= 6 and self.wind.gust < 9 then\n                    self:updateProperty(\"deviceIcon\", self.ic.gale_icon)\n                elseif self.wind.gust >= 9 then\n                    self:updateProperty(\"deviceIcon\", self.ic.tornado_icon)\n                end\n            elseif self.base.wind_unit == \" kt.\" then\n                if self.wind.gust < 6 then\n                    self:updateProperty(\"deviceIcon\", self.ic.main_icon)\n                elseif self.wind.gust >= 6 and self.wind.gust < 27 then\n                    self:updateProperty(\"deviceIcon\", self.ic.wind_icon)\n                elseif self.wind.gust >= 27 and self.wind.gust < 47 then\n                    self:updateProperty(\"deviceIcon\", self.ic.gale_icon)\n                elseif self.wind.gust >= 47 then\n                    self:updateProperty(\"deviceIcon\", self.ic.tornado_icon)\n                end\n            else\n                if self.wind.gust < 11 then\n                    self:updateProperty(\"deviceIcon\", self.ic.main_icon)\n                elseif self.wind.gust >= 11 and self.wind.gust < 49 then\n                    self:updateProperty(\"deviceIcon\", self.ic.wind_icon)\n                elseif self.wind.gust >= 49 and self.wind.gust < 88 then\n                    self:updateProperty(\"deviceIcon\", self.ic.gale_icon)\n                elseif self.wind.gust >= 88 then\n                    self:updateProperty(\"deviceIcon\", self.ic.tornado_icon)\n                end\n            end\n        else\n            self:updateProperty(\"deviceIcon\", self.ic.batt_icon)\n        end\n    else\n        self:debug(\"ERROR - Wind module not updated recently\")\n        self:debug(json.encode(self.wind))\n        self:displayNil()\n    end\nend\n\nfunction QuickApp:onInit()\n    self:debug(\"onInit\")\n    self:initIcons()\n    appSelf = self\n    f = fibaro\n    self.wind = {}\n    self.base = {}\n    local s = fibaro.getGlobalVariable(\"netatmo_sy\")\n    sy = json.decode(s)\n    self:displayNil()\n    post({type = \"start\"})\nend\n","quickAppVariables":[],"typeTemplateInitialized":true}}